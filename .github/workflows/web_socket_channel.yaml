name: package:web_socket_channel

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/web_socket_channel.yaml'
      - 'pkgs/web_socket_channel/**'
  pull_request:
    paths:
      - '.github/workflows/web_socket_channel.yaml'
      - 'pkgs/web_socket_channel/**'
  schedule:
    - cron: "0 0 * * 0"

defaults:  
  run:  
    working-directory: pkgs/web_socket_channel/

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  # Check code formatting and static analysis on a single OS (linux)
  # against Dart dev.
  analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [dev]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze
        if: always() && steps.install.outcome == 'success'

  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [3.3, dev]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Run VM tests
        run: dart test --platform vm
        if: always() && steps.install.outcome == 'success'
      - name: Run Chrome tests
        run: dart test --platform chrome
        if: always() && steps.install.outcome == 'success'
      - name: Run Chrome tests - wasm
        run: dart test --platform chrome --compiler dart2wasm
        if: always() && steps.install.outcome == 'success' && matrix.sdk == 'dev'

  # Run analysis against the oldest supported pub constraints.
  downgrade:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
      - run: dart pub downgrade
      - run: dart analyze
