name: package:http_parser

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/http_parser.yaml'
      - 'pkgs/http_parser/**'
  pull_request:
    paths:
      - '.github/workflows/http_parser.yaml'
      - 'pkgs/http_parser/**'
  schedule:
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

defaults:  
  run:  
    working-directory: pkgs/http_parser/

permissions: read-all

jobs:
  # Check code formatting and static analysis on a single OS (linux)
  # against Dart dev.
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [dev]
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      - uses: dart-lang/setup-dart@0a8a0fc875eb934c15d08629302413c671d3f672
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [3.4, dev]
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      - uses: dart-lang/setup-dart@0a8a0fc875eb934c15d08629302413c671d3f672
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Run VM tests
        run: dart test --platform vm
        if: always() && steps.install.outcome == 'success'
      - name: Run Chrome tests
        run: dart test --platform chrome
        if: always() && steps.install.outcome == 'success'
      - name: Run Chrome tests - wasm
        run: dart test --platform chrome --compiler dart2wasm
        if: always() && steps.install.outcome == 'success'
